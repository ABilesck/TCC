<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="placaLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="modeloLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="anoLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="corLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="kmRodadoLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="banco.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="tcc_AutomovelBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>102, 17</value>
  </metadata>
  <metadata name="tcc_AutomovelTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>313, 17</value>
  </metadata>
  <metadata name="tableAdapterManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>518, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>